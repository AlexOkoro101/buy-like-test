{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers/rootReducer';\nimport userReducer from '../redux/features/userSlice';\nvar middleware = [];\nmiddleware.push(thunk);\nvar loggerMiddleware = createLogger({\n  predicate: function predicate() {\n    return true;\n  }\n});\nmiddleware.push(loggerMiddleware);\nvar configure = configureStore({\n  reducer: {\n    user: userReducer\n  }\n});\nvar store = createStore(rootReducer, true ? composeWithDevTools(applyMiddleware.apply(void 0, middleware)) : false ? applyMiddleware.apply(void 0, middleware) : null);\nexport default {\n  store: store,\n  configure: configure\n};","map":{"version":3,"sources":["C:/projects/buylike-web/redux/store.js"],"names":["createStore","applyMiddleware","configureStore","composeWithDevTools","thunk","createLogger","rootReducer","userReducer","middleware","push","loggerMiddleware","predicate","configure","reducer","user","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,IAAMC,UAAU,GAAG,EAAnB;AAEAA,UAAU,CAACC,IAAX,CAAgBL,KAAhB;AAEA,IAAMM,gBAAgB,GAAGL,YAAY,CAAC;AACpCM,EAAAA,SAAS,EAAE;AAAA;AAAA;AADyB,CAAD,CAArC;AAIAH,UAAU,CAACC,IAAX,CAAgBC,gBAAhB;AAEA,IAAME,SAAS,GAAGV,cAAc,CAAE;AAChCW,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEP;AADC;AADuB,CAAF,CAAhC;AAMA,IAAMQ,KAAK,GAAGf,WAAW,CACvBM,WADuB,EAEvB,OACIH,mBAAmB,CAACF,eAAe,MAAf,SAAmBO,UAAnB,CAAD,CADvB,GAEI,QACAP,eAAe,MAAf,SAAmBO,UAAnB,CADA,GAEA,IANmB,CAAzB;AASA,eAAe;AAACO,EAAAA,KAAK,EAALA,KAAD;AAAQH,EAAAA,SAAS,EAATA;AAAR,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport userReducer from '../redux/features/userSlice';\r\n\r\nconst middleware = [];\r\n\r\nmiddleware.push(thunk);\r\n\r\nconst loggerMiddleware = createLogger({\r\n  predicate: () => process.env.NODE_ENV === 'development',\r\n});\r\n\r\nmiddleware.push(loggerMiddleware);\r\n\r\nconst configure = configureStore ({\r\n  reducer: {\r\n    user: userReducer,\r\n  }\r\n})\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  process.env.NODE_ENV === 'development'\r\n    ? composeWithDevTools(applyMiddleware(...middleware))\r\n    : process.env.NODE_ENV === 'production'\r\n    ? applyMiddleware(...middleware)\r\n    : null\r\n);\r\n\r\nexport default {store, configure};"]},"metadata":{},"sourceType":"module"}