{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers/rootReducer';\nconst middleware = [];\nmiddleware.push(thunk);\nconst loggerMiddleware = createLogger({\n  predicate: () => true\n});\nmiddleware.push(loggerMiddleware);\nconst store = createStore(rootReducer, true ? composeWithDevTools(applyMiddleware(...middleware)) : false ? applyMiddleware(...middleware) : null);\nexport default store;","map":{"version":3,"sources":["C:/projects/buylike-web/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","createLogger","rootReducer","middleware","push","loggerMiddleware","predicate","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,UAAU,GAAG,EAAnB;AAEAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AAEA,MAAMK,gBAAgB,GAAGJ,YAAY,CAAC;AACpCK,EAAAA,SAAS,EAAE;AADyB,CAAD,CAArC;AAIAH,UAAU,CAACC,IAAX,CAAgBC,gBAAhB;AAEA,MAAME,KAAK,GAAGV,WAAW,CACvBK,WADuB,EAEvB,OACIH,mBAAmB,CAACD,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CADvB,GAEI,QACAL,eAAe,CAAC,GAAGK,UAAJ,CADf,GAEA,IANmB,CAAzB;AASA,eAAeI,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst middleware = [];\r\n\r\nmiddleware.push(thunk);\r\n\r\nconst loggerMiddleware = createLogger({\r\n  predicate: () => process.env.NODE_ENV === 'development',\r\n});\r\n\r\nmiddleware.push(loggerMiddleware);\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  process.env.NODE_ENV === 'development'\r\n    ? composeWithDevTools(applyMiddleware(...middleware))\r\n    : process.env.NODE_ENV === 'production'\r\n    ? applyMiddleware(...middleware)\r\n    : null\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}