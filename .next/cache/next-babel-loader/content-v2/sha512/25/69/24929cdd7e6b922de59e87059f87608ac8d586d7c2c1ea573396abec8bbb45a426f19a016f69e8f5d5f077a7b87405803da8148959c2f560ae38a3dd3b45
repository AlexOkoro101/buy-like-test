{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { REQUEST_ERROR, REQUEST_SUCCESS, SET_REQUEST } from './types';\nimport axios from 'axios';\nexport var requestVehicle = function requestVehicle() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('https://jsonplaceholder.typicode.com/posts?_limit=3');\n\n            case 3:\n              res = _context.sent;\n              dispatch({\n                type: REQUEST_SUCCESS,\n                payload: res.data\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/projects/buylike-web/redux/actions/requestActions.js"],"names":["REQUEST_ERROR","REQUEST_SUCCESS","SET_REQUEST","axios","requestVehicle","dispatch","get","res","type","payload","data","console","log"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,eAAxB,EAAyCC,WAAzC,QAA4D,SAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA,wEAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEdF,KAAK,CAACG,GAAN,CAChB,qDADgB,CAFc;;AAAA;AAE1BC,cAAAA,GAF0B;AAKhCF,cAAAA,QAAQ,CAAC;AAAEG,gBAAAA,IAAI,EAAEP,eAAR;AAAyBQ,gBAAAA,OAAO,EAAEF,GAAG,CAACG;AAAtC,eAAD,CAAR;AALgC;AAAA;;AAAA;AAAA;AAAA;AAOhCC,cAAAA,OAAO,CAACC,GAAR;;AAPgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { REQUEST_ERROR, REQUEST_SUCCESS, SET_REQUEST } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const requestVehicle = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      'https://jsonplaceholder.typicode.com/posts?_limit=3'\r\n    );\r\n    dispatch({ type: REQUEST_SUCCESS, payload: res.data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n  \r\n"]},"metadata":{},"sourceType":"module"}